#MAKEDIR := make
#
## Useful tools
#include $(MAKEDIR)/make-tools.mk
#include lib/wirish/rules.mk
#
#
#
## Variables
#BUILD_PATH := build
#BOARD = breeze
#
#BUILDDIRS :=
#TGT_BIN   :=
#
#MCU_CC_FLAGS = $(CORTEX_M4_HWFP_CC_FLAGS)
#MCU_LIB_PATH = $(CORTEX_M4_HWFP_LIB_PATH) 
#
#LIBMAPLE_PATH := lib/libmaple
#WIRISH_PATH := lib/wirish
#LIBMAPLE_INCLUDES := -I$(LIBMAPLE_PATH) -I$(LIBMAPLE_PATH)/usb -I$(LIBMAPLE_PATH)/usb/usb_lib
#
#
#
#CFLAGS   = $(GLOBAL_CFLAGS) $(TGT_CFLAGS)
#CXXFLAGS = $(GLOBAL_CXXFLAGS) $(TGT_CXXFLAGS)
#ASFLAGS  = $(GLOBAL_ASFLAGS) $(TGT_ASFLAGS)
#
#
#
## target 
#.PHONY: install
#
#all: $(BUILD_PATH)/$(BOARD).bin
#
## General directory independent build rules, generate dependency information
#$(BUILD_PATH)/%.o: %.c
#	$(SILENT_CC) $(CC) $(CFLAGS) -MMD -MP -MF $(@:%.o=%.d) -MT $@ -o $@ -c $<
#
#$(BUILD_PATH)/%.o: %.cpp
#	$(SILENT_CXX) $(CXX) $(CFLAGS) $(CXXFLAGS) -MMD -MP -MF $(@:%.o=%.d) -MT $@ -o $@ -c $<
#
#$(BUILD_PATH)/%.o: %.S
#	$(SILENT_AS) $(AS) $(ASFLAGS) -MMD -MP -MF $(@:%.o=%.d) -MT $@ -o $@ -c $<
#
#
#$(BUILD_PATH)/main.o: src/main.cpp
#	$(SILENT_CXX) $(CXX) $(CFLAGS) $(CXXFLAGS) $(LIBMAPLE_INCLUDES) $(WIRISH_INCLUDES) -o $@ -c $< 
#
#$(BUILD_PATH)/libmaple.a: $(BUILDDIRS) $(TGT_BIN)
#	- rm -f $@
#	$(AR) crv $(BUILD_PATH)/libmaple.a $(TGT_BIN)
#	
#	
#$(BUILD_PATH)/$(BOARD).elf: $(BUILDDIRS) $(TGT_BIN) $(BUILD_PATH)/main.o
#	$(SILENT_LD) $(CXX) $(LDFLAGS) -o $@ $(TGT_BIN) $(BUILD_PATH)/main.o -Wl,-Map,$(BUILD_PATH)/$(BOARD).map
#
#$(BUILD_PATH)/$(BOARD).bin: $(BUILD_PATH)/$(BOARD).elf
#	$(SILENT_OBJCOPY) $(OBJCOPY) -v -Obinary $(BUILD_PATH)/$(BOARD).elf $@ 1>/dev/null
#	$(SILENT_DISAS) $(DISAS) -d $(BUILD_PATH)/$(BOARD).elf > $(BUILD_PATH)/$(BOARD).disas
#	@echo " "
#	@echo "Object file sizes:"
#	@find $(BUILD_PATH) -iname *.o | xargs $(SIZE) -t > $(BUILD_PATH)/$(BOARD).sizes
#	@cat $(BUILD_PATH)/$(BOARD).sizes
#	@echo " "
#	@echo "Final Size:"
#	@$(SIZE) $<
#	@echo $(MEMORY_TARGET) > $(BUILD_PATH)/build-type
#
#$(BUILDDIRS):
#	@mkdir -p $@
#
#library: $(BUILD_PATH)/libmaple.a
#
#
### Conditionally upload to whatever the last build was
##install: INSTALL_TARGET = $(shell cat $(BUILD_PATH)/build-type 2>/dev/null)
##install: $(BUILD_PATH)/$(BOARD).bin
##	@echo "Install target:" $(INSTALL_TARGET)
##	$(UPLOAD_$(INSTALL_TARGET))
#
#clean:
#	rm -rf build/*
#	
#help:
#	@echo ""
#	@echo "  Breeze ARM makefile help"
#	@echo "  ----------------------"


